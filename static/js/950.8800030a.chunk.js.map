{"version":3,"file":"static/js/950.8800030a.chunk.js","mappings":"iRAEaA,EAAYC,EAAAA,GAAAA,IAAH,8GAgBTC,GATOD,EAAAA,GAAAA,IAAH,mKASIA,EAAAA,GAAAA,MAAH,gZAiBLE,EAAQF,EAAAA,GAAAA,MAAH,8FCnCLG,EAAe,CAC1BC,MAAO,GACPC,SAAU,I,SCoDZ,EA9CkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,GAA8CC,EAAAA,EAAAA,GAAQ,CACpDJ,aAAAA,EACAG,SAAAA,IAFME,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,aAKrBN,EAAoBI,EAApBJ,MAAOC,EAAaG,EAAbH,SAETM,GAAUC,EAAAA,EAAAA,UAAQ,kBAAKC,EAAAA,EAAAA,KAAL,GAAe,IACjCC,GAAaF,EAAAA,EAAAA,UAAQ,kBAAKC,EAAAA,EAAAA,KAAL,GAAe,IAE1C,OACE,kBAAMP,SAAUI,EAAhB,WACE,UAACX,EAAD,YACE,SAACG,EAAD,CAAOa,QAAQ,MAEf,SAACd,EAAD,CACAe,GAAIL,EACFM,MAAOb,EACPc,KAAK,QACLC,SAAUV,EACVW,KAAK,QACLC,YAAY,cAGhB,UAACtB,EAAD,YACE,SAACG,EAAD,CAAOa,QAAQ,MAEf,SAACd,EAAD,CACAe,GAAIF,EACFG,MAAOZ,EACPa,KAAK,WACLC,SAAUV,EACVW,KAAK,WACLC,YAAY,iBAGhB,SAACtB,EAAD,WACE,SAACuB,EAAA,EAAD,CAAQC,QAAQ,YAAYH,KAAK,SAAjC,uBAMP,E,oBClDYrB,EAAYC,EAAAA,GAAAA,IAAH,8HAOTwB,EAAOxB,EAAAA,GAAAA,IAAH,mKASJyB,EAAQzB,EAAAA,GAAAA,GAAH,4HCQlB,EAnBkB,WAChB,IAAM0B,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,IAAYC,EAAAA,IAAhCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAMhB,OACE,SAAC,EAAD,WACE,UAAC,EAAD,YACE,SAACN,EAAD,0BACA,SAAC,EAAD,CAAWnB,SARD,SAAA0B,GACdN,GAASO,EAAAA,EAAAA,IAAMD,GAChB,IAOMF,IAAU,cAAGI,MAAO,CAAEC,MAAO,OAAnB,SAA6BJ,QAI/C,C,kECDD,IArBgB,SAAC,GAAgC,IAA9B5B,EAA6B,EAA7BA,aAAcG,EAAe,EAAfA,SAC/B,GAA0B8B,EAAAA,EAAAA,WAAS,UAAKjC,IAAxC,eAAOK,EAAP,KAAc6B,EAAd,KAiBA,MAAO,CAAE7B,MAAAA,EAAO6B,SAAAA,EAAU5B,aAfL,SAAC,GAAgB,IAAd6B,EAAa,EAAbA,OACdpB,EAA+BoB,EAA/BpB,KAAMD,EAAyBqB,EAAzBrB,MAAOG,EAAkBkB,EAAlBlB,KAAMmB,EAAYD,EAAZC,QACrBC,EAAoB,aAATpB,EAAsBmB,EAAUtB,EACjDoB,GAAS,SAAAI,GAAS,yBACbA,GADa,cAEfvB,EAAOsB,GAFQ,GAInB,EAQuC9B,aANnB,SAAAgC,GACnBA,EAAEC,iBACFrC,GAAS,UAAKE,IACd6B,GAAS,UAAKlC,GACf,EAGF,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/InitialState.jsx","components/LoginForm/LoginForm.jsx","Pages/LoginPage/LoginPage.styled.js","Pages/LoginPage/LoginPage.jsx","service/hooks/useForm.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nmargin-bottom: 15px;\n`;\n\nexport const Form = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 500px;\n    height: 500px;\n    border-radius: 5px;\n`;\n\nexport const Input = styled.input`\n    border: none;\n    border-bottom: 0.125rem solid #50decd;\n    width: 250px;\n    height: 2rem;\n    font-size: 1.0625rem;\n    padding-left: 0.875rem;\n    border-radius: 5px;\n    line-height: 147.6%;\n    padding-top: 0.825rem;\n    padding-bottom: 0.5rem;\n        &:focus {\n            outline: none;\n            border-bottom: 0.125rem solid #decb50;\n        }\n`;\n\nexport const Label = styled.label`\n    line-height: 147.6%;\n    color: grey;\n    transition: top .2s;\n`;\n","export const initialState = {\n  email: '',\n  password: '',\n};\n","import useForm from '../../service/hooks/useForm';\nimport { nanoid } from '@reduxjs/toolkit';\nimport { useMemo } from \"react\";\nimport { Button } from '@mui/material';\nimport {Container, Input, Label } from \"./LoginForm.styled\";\n\nimport { initialState } from './InitialState';\n\nconst LoginForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  const { email, password } = state;\n\n  const emailId = useMemo(()=> nanoid(), []);\n  const passwordId = useMemo(()=> nanoid(), []);\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Container>\n        <Label htmlFor=\"\">\n        </Label>\n        <Input\n        id={emailId}\n          value={email}\n          name=\"email\"\n          onChange={handleChange}\n          type=\"email\"\n          placeholder=\"Email\"\n        />\n      </Container>\n      <Container>\n        <Label htmlFor=\"\">\n        </Label>\n        <Input\n        id={passwordId}\n          value={password}\n          name=\"password\"\n          onChange={handleChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n      </Container>\n      <Container>\n        <Button variant=\"contained\" type=\"submit\">\n          Login\n        </Button>\n      </Container>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin-bottom: 15px;\n`;\n\nexport const Form = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 500px;\n    height: 500px;\n    border-radius: 5px;\n`;\n\nexport const Title = styled.h2`\n  margin-left: 30px;\n  font-family: 'Roboto', cursive;\n  font-weight: 300;\n  font-size: 30px;\n  `;","import { useSelector, useDispatch } from 'react-redux';\n\nimport LoginForm from '../../components/LoginForm/LoginForm';\nimport { login } from 'redux/authentication/authentication-operations';\nimport { getAuthError } from '../../redux/authentication/authentication-selectors';\nimport { Form, Container, Title } from \"./LoginPage.styled\";\n\nconst LoginPage = () => {\n  const dispatch = useDispatch();\n  const { status, message } = useSelector(getAuthError);\n\n  const onLogin = data => {\n    dispatch(login(data));\n  };\n\n  return (\n    <Container>\n      <Form>\n        <Title>Login Page</Title>\n        <LoginForm onSubmit={onLogin} />\n        {status && <p style={{ color: 'red' }}>{message}</p>}\n      </Form>\n    </Container>\n  );\n};\n\nexport default LoginPage;\n","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState(prevState => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;"],"names":["Container","styled","Input","Label","initialState","email","password","onSubmit","useForm","state","handleChange","handleSubmit","emailId","useMemo","nanoid","passwordId","htmlFor","id","value","name","onChange","type","placeholder","Button","variant","Form","Title","dispatch","useDispatch","useSelector","getAuthError","status","message","data","login","style","color","useState","setState","target","checked","newValue","prevState","e","preventDefault"],"sourceRoot":""}