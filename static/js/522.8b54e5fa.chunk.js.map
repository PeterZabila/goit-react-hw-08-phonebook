{"version":3,"file":"static/js/522.8b54e5fa.chunk.js","mappings":"mPAEaA,EAAUC,EAAAA,GAAAA,IAAH,sHAOPC,EAAQD,EAAAA,GAAAA,MAAH,8FAMLE,EAAQF,EAAAA,GAAAA,MAAH,sXCfLG,GD+BSH,EAAAA,GAAAA,OAAH,yXC/BS,CAC1BI,KAAM,GACNC,MAAO,GACPC,SAAU,K,SCwDZ,EArDqB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,GAA8CC,EAAAA,EAAAA,GAAQ,CACpDL,aAAAA,EACAI,SAAAA,IAFME,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,aAKrBP,EAA0BK,EAA1BL,KAAMC,EAAoBI,EAApBJ,MAAOC,EAAaG,EAAbH,SAErB,OACE,kBAAMM,OAAO,GAAGL,SAAUI,EAA1B,WACE,UAACZ,EAAD,YACE,SAACE,EAAD,CAAOY,QAAQ,MAEf,SAACX,EAAD,CACEY,MAAOV,EACPA,KAAK,OACLW,SAAUL,EACVM,KAAK,OACLC,YAAY,OACZC,UAAQ,QAGZ,UAACnB,EAAD,YACE,SAACE,EAAD,CAAOY,QAAQ,MAEf,SAACX,EAAD,CACEY,MAAOT,EACPD,KAAK,QACLW,SAAUL,EACVM,KAAK,QACLC,YAAY,cAGhB,UAAClB,EAAD,YACE,SAACE,EAAD,CAAOY,QAAQ,MAEf,SAACX,EAAD,CACEY,MAAOR,EACPF,KAAK,WACLW,SAAUL,EACVM,KAAK,WACLC,YAAY,iBAGhB,SAAClB,EAAD,WACE,SAACoB,EAAA,EAAD,CAAQC,QAAQ,YAAYJ,KAAK,SAAjC,8BAMP,E,UCvDYK,EAAYrB,EAAAA,GAAAA,IAAH,mGAMTsB,EAAOtB,EAAAA,GAAAA,IAAH,oKASJuB,EAAQvB,EAAAA,GAAAA,GAAH,4H,oBCUlB,EAnByB,WACvB,IAAMwB,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,IAAYC,EAAAA,IAAhCC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAMhB,OACE,SAACR,EAAD,WACE,UAACC,EAAD,YACE,SAACC,EAAD,iCACA,SAAC,EAAD,CAAchB,SARD,SAAAuB,GACjBN,GAASO,EAAAA,EAAAA,IAAOD,GACjB,IAOMF,IAAU,cAAGI,MAAO,CAAEC,MAAO,OAAnB,SAA6BJ,QAI/C,C,kECFD,IArBgB,SAAC,GAAgC,IAA9B1B,EAA6B,EAA7BA,aAAcI,EAAe,EAAfA,SAC/B,GAA0B2B,EAAAA,EAAAA,WAAS,UAAK/B,IAAxC,eAAOM,EAAP,KAAc0B,EAAd,KAiBA,MAAO,CAAE1B,MAAAA,EAAO0B,SAAAA,EAAUzB,aAfL,SAAC,GAAgB,IAAd0B,EAAa,EAAbA,OACdhC,EAA+BgC,EAA/BhC,KAAMU,EAAyBsB,EAAzBtB,MAAOE,EAAkBoB,EAAlBpB,KAAMqB,EAAYD,EAAZC,QACrBC,EAAoB,aAATtB,EAAsBqB,EAAUvB,EACjDqB,GAAS,SAAAI,GAAS,yBACbA,GADa,cAEfnC,EAAOkC,GAFQ,GAInB,EAQuC3B,aANnB,SAAA6B,GACnBA,EAAEC,iBACFlC,GAAS,UAAKE,IACd0B,GAAS,UAAKhC,GACf,EAGF,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/initialState.jsx","components/RegisterForm/RegisterForm.jsx","Pages/RegistrationPage/RegistrationPage.styled.js","Pages/RegistrationPage/RegistrationPage.jsx","service/hooks/useForm.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Section = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 15px;\n`;\n\nexport const Label = styled.label`\n    line-height: 147.6%;\n    color: grey;\n    transition: top .2s;\n`;\n\nexport const Input = styled.input`\n    border: none;\n    border-bottom: 0.125rem solid #50decd;\n    width: 250px;\n    height: 2rem;\n    font-size: 1.0625rem;\n    padding-left: 0.875rem;\n    line-height: 147.6%;\n    padding-top: 0.825rem;\n    padding-bottom: 0.5rem;\n        &:focus {\n            outline: none;\n            border-bottom: 0.125rem solid #decb50;\n        }\n`;\n\nexport const Button = styled.button`\n    display: block;\n    margin-top: 20px;\n    width: 120px;\n    font-size: 16px;\n    color: black;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 5px;\n    border: 1px solid rgba(75, 163, 191, 0.3);\n    border-radius: 3px;\n    cursor: pointer;\n        &:focus {\n            border: 1px solid rgba(75, 163, 191, 0.7);\n        }\n`;\n\n\n\n\n\n","export const initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n","import useForm from '../../service/hooks/useForm';\nimport { Button } from '@mui/material';\nimport { Section, Input, Label } from \"./RegisterForm.styled\";\n\nimport { initialState } from './initialState';\n\nconst RegisterForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  const { name, email, password } = state;\n\n  return (\n    <form action=\"\" onSubmit={handleSubmit}>\n      <Section>\n        <Label htmlFor=\"\">\n        </Label>\n        <Input\n          value={name}\n          name=\"name\"\n          onChange={handleChange}\n          type=\"text\"\n          placeholder=\"Name\"\n          required\n        />\n      </Section>\n      <Section>\n        <Label htmlFor=\"\">\n        </Label>\n        <Input\n          value={email}\n          name=\"email\"\n          onChange={handleChange}\n          type=\"email\"\n          placeholder=\"Email\"\n        />\n      </Section>\n      <Section>\n        <Label htmlFor=\"\">\n        </Label>\n        <Input\n          value={password}\n          name=\"password\"\n          onChange={handleChange}\n          type=\"password\"\n          placeholder=\"Password\"\n        />\n      </Section>\n      <Section>\n        <Button variant=\"contained\" type=\"submit\">\n          Registration\n        </Button>\n      </Section>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport const Form = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 500px;\n    height: 500px;\n    border-radius: 15px;\n`;\n\nexport const Title = styled.h2`\n  margin-left: 30px;\n  font-family: 'Roboto', cursive;\n  font-weight: 300;\n  font-size: 30px;\n  `;","import RegisterForm from 'components/RegisterForm/RegisterForm';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Container, Form, Title } from \"./RegistrationPage.styled\";\n\nimport { signup } from '../../redux/authentication/authentication-operations';\n\nimport { getAuthError } from '../../redux/authentication/authentication-selectors';\n\nconst RegistrationPage = () => {\n  const dispatch = useDispatch();\n  const { status, message } = useSelector(getAuthError);\n\n  const onRegister = data => {\n    dispatch(signup(data));\n  };\n\n  return (\n    <Container>\n      <Form>\n        <Title>Registration Form</Title>\n        <RegisterForm onSubmit={onRegister} />\n        {status && <p style={{ color: 'red' }}>{message}</p>}\n      </Form>\n    </Container>\n  );\n};\n\nexport default RegistrationPage;\n","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    const { name, value, type, checked } = target;\n    const newValue = type === 'checkbox' ? checked : value;\n    setState(prevState => ({\n      ...prevState,\n      [name]: newValue,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["Section","styled","Label","Input","initialState","name","email","password","onSubmit","useForm","state","handleChange","handleSubmit","action","htmlFor","value","onChange","type","placeholder","required","Button","variant","Container","Form","Title","dispatch","useDispatch","useSelector","getAuthError","status","message","data","signup","style","color","useState","setState","target","checked","newValue","prevState","e","preventDefault"],"sourceRoot":""}